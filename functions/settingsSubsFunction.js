import { InlineKeyboard } from 'grammy'
import { User } from '../models/User.js'
import { Subscriber } from './../models/Subscriber.js'
import { Op } from 'sequelize'


export default async ctx => {
	try {
		const users = await User.findAll()
		const allTimeSubscribers = await Subscriber.findAll()
		const subscribers = await Subscriber.findAll({where: {remaining: {[Op.gt]: 0}}})

		const usersWithSubscribes = await User.findAll({
			include: [
				{
					model: Subscriber,
					as: 'subscriber', // –ò—Å–ø–æ–ª—å–∑—É–µ–º alias, –∑–∞–¥–∞–Ω–Ω—ã–π –≤ –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏
				},
			],
		})
		const usersWithoutSubscriber = usersWithSubscribes.filter(
			e => e.subscriber.length == 0
		)

		const notRenewSubscribers = await Subscriber.findAll({where: {remaining: {[Op.lt]: 1}}})

		const inline = new InlineKeyboard()
			.text('–°–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å–æ–∫', 'subscribersList').row()
			.text('–°–ø–∏—Å–æ–∫ –Ω–µ –ø—Ä–æ–¥–ª–µ–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫', 'notRenewList').row()
			.text('–¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', 'usersList').row()
			.text('–í—ã–¥–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', 'giveSubscription').row()
			.text('–ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', 'renewSubscription').row()
			.text('–û–±–Ω—É–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', 'cancelSubscription').row()
			.text(`üîô –ù–∞–∑–∞–¥`, `banBack`)

		await ctx.reply(`–í—Å–µ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –≤ –±–æ—Ç–∞: ${users.length} —á–µ–ª.
üë•–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤:
üî∏–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫: ${subscribers.length}
üî∏–Ω–µ –ø—Ä–æ–¥–ª–µ–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫: ${notRenewSubscribers.length}
üî∏–∫—É–ø–ª–µ–Ω–æ –ø–æ–¥–ø–∏—Å–æ–∫: ${allTimeSubscribers.length}
üî∏–Ω–∏ —Ä–∞–∑—É –Ω–µ –∫—É–ø–∏–≤—à–∏—Ö: ${usersWithoutSubscriber.length} —á–µ–ª.

–í —ç—Ç–æ–º –º–µ–Ω—é –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å –∏ —É–¥–∞–ª—è—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤.`,
		{
			reply_markup: inline
		})
	} catch (e) {
		console.log(e)
	}
}
